import type { Config } from '@jest/types';

const config: Config.InitialOptions = {
  preset: 'ts-jest',  // Use ts-jest for TypeScript support
  testEnvironment: 'node',  // Set the test environment to node (suitable for backend tests)
  moduleFileExtensions: ['ts', 'js', 'json', 'node'],  // Include node extension for modules
  transform: {
    '^.+\\.(ts|tsx)$': ['ts-jest', { isolatedModules: true }],  // Use ts-jest to transform TypeScript files
  },
  setupFilesAfterEnv: ['<rootDir>/jest.setup.ts'],  // Specify a setup file for any test configuration, ensure the file exists
  globals: {
    'ts-jest': {
      tsconfig: '<rootDir>/tsconfig.json',  // Specify the correct tsconfig to use for ts-jest transformations
    },
  },
  moduleNameMapper: {
    '^@models/(.*)$': '<rootDir>/src/models/$1',  // Correctly map models to src/models
    '^@/(.*)$': '<rootDir>/src/$1',  // Map "@" to "src" folder for other paths
    '^~/(.*)$': '<rootDir>/src/$1',  // Optional: If you use "~" as an alias for the src directory
  },
  collectCoverageFrom: [
    'src/**/*.{ts,t{
      "compilerOptions": {
        "target": "ES6",  // Set target to ES6 for Node.js compatibility
        "module": "commonjs",  // Use commonjs for Node.js
        "moduleResolution": "node",  // Resolves modules like Node.js
        "esModuleInterop": true,  // Allow default imports from modules with no default export
        "allowSyntheticDefaultImports": true,  // Allows default imports from non-default export modules
        "skipLibCheck": true,  // Skip library type checking for faster builds
        "forceConsistentCasingInFileNames": true,  // Enforce consistent casing
        "strict": true,  // Enable all strict checks (best practice)
        "noImplicitAny": true,  // Disallow implicit any types
        "strictNullChecks": true,  // Ensure null checks are enabled
        "outDir": "./dist",  // Compiled files go to the "dist" folder
        "baseUrl": "./src",  // The root of the project (for path mapping)
        "paths": {
          "@/*": ["*"]  // Path alias for "src" directory
        },
        "resolveJsonModule": true,  // Allow importing JSON files as modules
        "lib": ["esnext", "dom", "es2015"],  // Include ES libraries and DOM for node and frontend compatibility
        "typeRoots": [
          "./node_modules/@types",  // Standard types folder
          "./src/types"  // Custom types folder (if you have one)
        ],
        "types": ["jest", "node"],  // Include Jest and Node types for testing and Node.js
        "tsBuildInfoFile": "./.tsbuildinfo",  // For incremental builds
        "incremental": true  // Enable incremental compilation for faster rebuilds
      },
      "include": [
        "src/**/*.ts",  // Include all .ts files in the src folder
        "src/**/*.tsx",  // Include all .tsx files in the src folder
        "src/**/*.js",  // If you have any JS files in the src folder
        "src/**/*.d.ts",  // Include any declaration files in the src folder
        "src/test/**/*.ts",  // Ensure test files are included
        "src/test/**/*.tsx"  // Include test .tsx files if present
      ],
      "exclude": [
        "node_modules",  // Exclude the "node_modules" folder
        "dist",  // Exclude the compiled "dist" folder
        "jest.config.ts",  // Exclude Jest config if using TypeScript for config
        "**/*.spec.ts"  // Optional: Exclude individual test files if needed
      ]
    }
    sx}',  // Collect coverage from TypeScript files only
    '!src/**/*.d.ts',  // Exclude declaration files from coverage
  ],
  coverageDirectory: 'coverage',  // Specify the directory where coverage reports will be stored
  coverageProvider: 'v8',  // Use v8 for faster code coverage collection
  testPathIgnorePatterns: [
    '/node_modules/',  // Ignore node_modules during tests
    '/dist/',  // Exclude dist folder to avoid running tests on transpiled files
  ],
  verbose: true,  // Enable verbose output to see detailed test results
};

export default config;
