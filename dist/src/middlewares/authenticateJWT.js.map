{"version":3,"sources":["../../../src/middlewares/authenticateJWT.ts"],"sourcesContent":["import jwt, { JwtPayload } from 'jsonwebtoken';\r\nimport { Response, NextFunction } from 'express';\r\nimport { AuthRequest } from '../types';  // Correct import path\r\n\r\n// Middleware to authenticate JWT and attach user info to the request\r\nexport const authenticateJWT = (\r\n  req: AuthRequest, \r\n  res: Response, \r\n  next: NextFunction\r\n): void => {  // Return type is void, as it's standard for middleware\r\n  const token = req.headers['authorization']?.split(' ')[1];  // Extract token from Authorization header\r\n\r\n  // If no token is provided, return a 403 response\r\n  if (!token) {\r\n    res.status(403).json({ message: 'No token provided.' });\r\n    return;  // Ensure that the middleware stops execution\r\n  }\r\n\r\n  // Verify the token using the secret key (this is a synchronous check)\r\n  jwt.verify(token, process.env.JWT_SECRET!, (err: any, decoded: JwtPayload | undefined) => {\r\n    if (err) {\r\n      res.status(403).json({ message: 'Invalid token.' });\r\n      return;  // Ensure that the middleware stops execution\r\n    }\r\n\r\n    // Ensure that decoded is not undefined\r\n    if (decoded) {\r\n      // Attach the user object to the request, ensuring 'tier' and 'role' are included\r\n      req.user = {\r\n        id: decoded.id,  // Explicitly access properties from decoded JwtPayload\r\n        email: decoded.email,\r\n        username: decoded.username,\r\n        tier: decoded.tier,  // Include 'tier' from the JWT payload\r\n        role: decoded.role,  // Include 'role' from the JWT payload\r\n      };\r\n    }\r\n\r\n    next();  // Proceed to the next middleware or route handler\r\n  });\r\n};\r\n"],"names":["authenticateJWT","req","res","next","token","headers","split","status","json","message","jwt","verify","process","env","JWT_SECRET","err","decoded","user","id","email","username","tier","role"],"mappings":";;;;+BAKaA;;;eAAAA;;;qEALmB;;;;;;AAKzB,MAAMA,kBAAkB,CAC7BC,KACAC,KACAC;IAEA,MAAMC,QAAQH,IAAII,OAAO,CAAC,gBAAgB,EAAEC,MAAM,IAAI,CAAC,EAAE,EAAG,0CAA0C;IAEtG,iDAAiD;IACjD,IAAI,CAACF,OAAO;QACVF,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAqB;QACrD,QAAS,6CAA6C;IACxD;IAEA,sEAAsE;IACtEC,qBAAG,CAACC,MAAM,CAACP,OAAOQ,QAAQC,GAAG,CAACC,UAAU,EAAG,CAACC,KAAUC;QACpD,IAAID,KAAK;YACPb,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAiB;YACjD,QAAS,6CAA6C;QACxD;QAEA,uCAAuC;QACvC,IAAIO,SAAS;YACX,iFAAiF;YACjFf,IAAIgB,IAAI,GAAG;gBACTC,IAAIF,QAAQE,EAAE;gBACdC,OAAOH,QAAQG,KAAK;gBACpBC,UAAUJ,QAAQI,QAAQ;gBAC1BC,MAAML,QAAQK,IAAI;gBAClBC,MAAMN,QAAQM,IAAI;YACpB;QACF;QAEAnB,QAAS,kDAAkD;IAC7D;AACF"}