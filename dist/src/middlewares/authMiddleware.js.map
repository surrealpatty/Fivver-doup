{"version":3,"sources":["../../../src/middlewares/authMiddleware.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport { UserPayload } from '../types/index'; // Ensure this is correctly imported from your types\r\n\r\nconst jwtSecret = process.env.JWT_SECRET;\r\n\r\nif (!jwtSecret) {\r\n  console.error('JWT_SECRET is not set. Authentication will fail.');\r\n}\r\n\r\n/**\r\n * Middleware to authenticate the token provided in the Authorization header.\r\n * If the token is valid, the decoded payload is attached to `req.user`.\r\n */\r\nexport const authenticateToken = (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): void => {\r\n  try {\r\n    // Extract token from the Authorization header\r\n    const authHeader = req.headers['authorization'];\r\n    const token = authHeader?.startsWith('Bearer ')\r\n      ? authHeader.split(' ')[1]\r\n      : undefined;\r\n\r\n    if (!token) {\r\n      res.status(401).json({ message: 'Access denied, no token provided.' });\r\n      return; // Explicit return to satisfy TypeScript's void requirement\r\n    }\r\n\r\n    // Verify the token\r\n    jwt.verify(token, jwtSecret as string, (err, decoded) => {\r\n      if (err) {\r\n        res.status(403).json({ message: 'Invalid or expired token.' });\r\n        return; // Explicit return to end execution\r\n      }\r\n\r\n      // Attach the decoded payload to req.user\r\n      req.user = decoded as UserPayload;\r\n\r\n      // Proceed to the next middleware or route handler\r\n      next();\r\n    });\r\n  } catch (error) {\r\n    console.error('Authentication error:', error);\r\n    res.status(500).json({ message: 'Internal server error during authentication.' });\r\n    return; // Explicit return to end execution\r\n  }\r\n};\r\n\r\n/**\r\n * Middleware to check if the user is authenticated.\r\n * It uses `authenticateToken` and adds additional checks if needed.\r\n */\r\nexport const checkAuth = (\r\n  req: Request,\r\n  res: Response,\r\n  next: NextFunction\r\n): void => {\r\n  authenticateToken(req, res, () => {\r\n    // Additional checks can be added here if needed (e.g., check if user is active)\r\n    if (req.user) {\r\n      next(); // If authenticated, proceed to the next route handler\r\n    } else {\r\n      res.status(401).json({ message: 'Authentication failed.' });\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Utility function to generate a JWT token for a user.\r\n * @param user The user object to generate a token for.\r\n * @returns A signed JWT token.\r\n */\r\nexport const generateToken = (user: { id: string; email: string; username: string }): string => {\r\n  const payload: UserPayload = { \r\n    id: user.id, \r\n    email: user.email,\r\n    username: user.username  // Include username in the token\r\n  };\r\n\r\n  return jwt.sign(payload, jwtSecret as string, { expiresIn: '1h' }); // You can modify expiration as needed\r\n};\r\n\r\nexport default authenticateToken;\r\n"],"names":["authenticateToken","checkAuth","generateToken","jwtSecret","process","env","JWT_SECRET","console","error","req","res","next","authHeader","headers","token","startsWith","split","undefined","status","json","message","jwt","verify","err","decoded","user","payload","id","email","username","sign","expiresIn"],"mappings":";;;;;;;;;;;IAcaA,iBAAiB;eAAjBA;;IAyCAC,SAAS;eAATA;;IA8Bb,OAAiC;eAAjC;;IAVaC,aAAa;eAAbA;;;qEA1EG;;;;;;AAGhB,MAAMC,YAAYC,QAAQC,GAAG,CAACC,UAAU;AAExC,IAAI,CAACH,WAAW;IACdI,QAAQC,KAAK,CAAC;AAChB;AAMO,MAAMR,oBAAoB,CAC/BS,KACAC,KACAC;IAEA,IAAI;QACF,8CAA8C;QAC9C,MAAMC,aAAaH,IAAII,OAAO,CAAC,gBAAgB;QAC/C,MAAMC,QAAQF,YAAYG,WAAW,aACjCH,WAAWI,KAAK,CAAC,IAAI,CAAC,EAAE,GACxBC;QAEJ,IAAI,CAACH,OAAO;YACVJ,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAoC;YACpE,QAAQ,2DAA2D;QACrE;QAEA,mBAAmB;QACnBC,qBAAG,CAACC,MAAM,CAACR,OAAOX,WAAqB,CAACoB,KAAKC;YAC3C,IAAID,KAAK;gBACPb,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;oBAAEC,SAAS;gBAA4B;gBAC5D,QAAQ,mCAAmC;YAC7C;YAEA,yCAAyC;YACzCX,IAAIgB,IAAI,GAAGD;YAEX,kDAAkD;YAClDb;QACF;IACF,EAAE,OAAOH,OAAO;QACdD,QAAQC,KAAK,CAAC,yBAAyBA;QACvCE,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAA+C;QAC/E,QAAQ,mCAAmC;IAC7C;AACF;AAMO,MAAMnB,YAAY,CACvBQ,KACAC,KACAC;IAEAX,kBAAkBS,KAAKC,KAAK;QAC1B,gFAAgF;QAChF,IAAID,IAAIgB,IAAI,EAAE;YACZd,QAAQ,sDAAsD;QAChE,OAAO;YACLD,IAAIQ,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAyB;QAC3D;IACF;AACF;AAOO,MAAMlB,gBAAgB,CAACuB;IAC5B,MAAMC,UAAuB;QAC3BC,IAAIF,KAAKE,EAAE;QACXC,OAAOH,KAAKG,KAAK;QACjBC,UAAUJ,KAAKI,QAAQ,CAAE,gCAAgC;IAC3D;IAEA,OAAOR,qBAAG,CAACS,IAAI,CAACJ,SAASvB,WAAqB;QAAE4B,WAAW;IAAK,IAAI,sCAAsC;AAC5G;MAEA,WAAe/B"}