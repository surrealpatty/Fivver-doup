{"version":3,"sources":["../../../src/middlewares/authMiddleware.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport { UserPayload } from '../types'; // Correct import for UserPayload\r\n\r\n// Secret key for JWT verification, should be in environment variables for security\r\nconst SECRET_KEY = process.env.JWT_SECRET_KEY || 'your-secret-key'; // Replace with your actual secret key\r\n\r\n// Middleware to authenticate token and attach user data to the request\r\nexport const authenticateToken = (\r\n  req: Request,  // The request type\r\n  res: Response,  // The response type\r\n  next: NextFunction // The next middleware function\r\n): void => {\r\n  const token = req.headers['authorization']?.split(' ')[1]; // Extract token from \"Authorization\" header\r\n\r\n  if (!token) {\r\n    return res.status(401).json({ message: 'Authorization token is missing' });\r\n  }\r\n\r\n  try {\r\n    // Verify the token\r\n    const decoded = jwt.verify(token, SECRET_KEY) as UserPayload;\r\n\r\n    // Attach user data to the request object\r\n    req.user = decoded;\r\n\r\n    // Proceed to the next middleware or route handler\r\n    next();\r\n  } catch (error) {\r\n    return res.status(401).json({ message: 'Invalid or expired token' });\r\n  }\r\n};\r\n"],"names":["authenticateToken","SECRET_KEY","process","env","JWT_SECRET_KEY","req","res","next","token","headers","split","status","json","message","decoded","jwt","verify","user","error"],"mappings":";;;;+BAQaA;;;eAAAA;;;qEAPG;;;;;;AAGhB,mFAAmF;AACnF,MAAMC,aAAaC,QAAQC,GAAG,CAACC,cAAc,IAAI,mBAAmB,sCAAsC;AAGnG,MAAMJ,oBAAoB,CAC/BK,KACAC,KACAC,KAAmB,+BAA+B;;IAElD,MAAMC,QAAQH,IAAII,OAAO,CAAC,gBAAgB,EAAEC,MAAM,IAAI,CAAC,EAAE,EAAE,4CAA4C;IAEvG,IAAI,CAACF,OAAO;QACV,OAAOF,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAiC;IAC1E;IAEA,IAAI;QACF,mBAAmB;QACnB,MAAMC,UAAUC,qBAAG,CAACC,MAAM,CAACR,OAAOP;QAElC,yCAAyC;QACzCI,IAAIY,IAAI,GAAGH;QAEX,kDAAkD;QAClDP;IACF,EAAE,OAAOW,OAAO;QACd,OAAOZ,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAA2B;IACpE;AACF"}