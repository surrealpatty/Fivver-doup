{"version":3,"sources":["../../../src/middlewares/tierMiddleware.ts"],"sourcesContent":["import { Request, Response, NextFunction } from 'express';\r\n\r\n// Define the type for the user object, assuming 'tier' is part of the user model\r\ninterface AuthRequest extends Request {\r\n  user?: { id: string; email: string; username: string; tier: string }; // Add the 'tier' field to the user object\r\n}\r\n\r\n// Middleware to check if the user has the required tier\r\nexport const checkTier = (tier: string) => {\r\n  return (req: AuthRequest, res: Response, next: NextFunction): void => {\r\n    // Check if the user exists and if the user has the required tier\r\n    if (req.user?.tier !== tier) {\r\n      res.status(403).json({ message: 'Forbidden: You need to be on the appropriate tier.' });\r\n      return; // Stop further processing, but do not return a value\r\n    }\r\n\r\n    // If tier matches, proceed to the next middleware/handler\r\n    next();\r\n  };\r\n};\r\n"],"names":["checkTier","tier","req","res","next","user","status","json","message"],"mappings":";;;;+BAQaA;;;eAAAA;;;AAAN,MAAMA,YAAY,CAACC;IACxB,OAAO,CAACC,KAAkBC,KAAeC;QACvC,iEAAiE;QACjE,IAAIF,IAAIG,IAAI,EAAEJ,SAASA,MAAM;YAC3BE,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAqD;YACrF,QAAQ,qDAAqD;QAC/D;QAEA,0DAA0D;QAC1DJ;IACF;AACF"}