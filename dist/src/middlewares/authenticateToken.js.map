{"version":3,"sources":["../../../src/middlewares/authenticateToken.ts"],"sourcesContent":["// src/middlewares/authenticateToken.ts\r\n\r\nimport { AuthRequest } from '../types/authMiddleware';\r\nimport { Response, NextFunction } from 'express';\r\nimport jwt from 'jsonwebtoken';\r\nimport { UserPayload } from '../types/index'; // Import UserPayload type\r\n\r\nexport const authenticateToken = (req: AuthRequest, res: Response, next: NextFunction): void => {\r\n  const token = req.header('Authorization')?.replace('Bearer ', '');\r\n  \r\n  // If no token is provided, respond with 401 and stop further execution\r\n  if (!token) {\r\n    res.status(401).json({ message: 'Access Denied: No token provided' });\r\n    return;  // Make sure to return here to stop further execution\r\n  }\r\n\r\n  try {\r\n    // Decode the token\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET_KEY as string) as { id: string };\r\n    \r\n    // Attach user info to the request object\r\n    req.user = {\r\n      id: decoded.id,\r\n      email: '', // Replace with actual logic to retrieve the email\r\n      username: '', // Replace with actual logic to retrieve the username\r\n      tier: 'free', // Replace with actual logic to retrieve the tier (or use the appropriate logic for tier)\r\n      role: '', // Optional field\r\n    } as UserPayload;  // Ensure the type matches UserPayload interface\r\n\r\n    next();  // Continue to the next middleware or route handler\r\n  } catch (err) {\r\n    // If the token is invalid, respond with 401\r\n    res.status(401).json({ message: 'Access Denied: Invalid token' });\r\n  }\r\n};\r\n"],"names":["authenticateToken","req","res","next","token","header","replace","status","json","message","decoded","jwt","verify","process","env","JWT_SECRET_KEY","user","id","email","username","tier","role","err"],"mappings":"AAAA,uCAAuC;;;;;+BAO1BA;;;eAAAA;;;qEAHG;;;;;;AAGT,MAAMA,oBAAoB,CAACC,KAAkBC,KAAeC;IACjE,MAAMC,QAAQH,IAAII,MAAM,CAAC,kBAAkBC,QAAQ,WAAW;IAE9D,uEAAuE;IACvE,IAAI,CAACF,OAAO;QACVF,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAmC;QACnE,QAAS,qDAAqD;IAChE;IAEA,IAAI;QACF,mBAAmB;QACnB,MAAMC,UAAUC,qBAAG,CAACC,MAAM,CAACR,OAAOS,QAAQC,GAAG,CAACC,cAAc;QAE5D,yCAAyC;QACzCd,IAAIe,IAAI,GAAG;YACTC,IAAIP,QAAQO,EAAE;YACdC,OAAO;YACPC,UAAU;YACVC,MAAM;YACNC,MAAM;QACR,GAAmB,gDAAgD;QAEnElB,QAAS,mDAAmD;IAC9D,EAAE,OAAOmB,KAAK;QACZ,4CAA4C;QAC5CpB,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAA+B;IACjE;AACF"}