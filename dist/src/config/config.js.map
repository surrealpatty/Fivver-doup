{"version":3,"sources":["../../../src/config/config.ts"],"sourcesContent":["import dotenv from 'dotenv';\r\n\r\n// Load environment variables from the .env file\r\ndotenv.config();\r\n\r\n// Extend the NodeJS.ProcessEnv interface to include custom properties\r\ndeclare global {\r\n  namespace NodeJS {\r\n    interface ProcessEnv {\r\n      DB_HOST?: string;\r\n      DB_USER?: string;\r\n      DB_PASSWORD?: string;\r\n      DB_NAME?: string;\r\n      DB_PORT?: string;\r\n      NODE_ENV?: string;\r\n      JWT_SECRET: string; // JWT_SECRET is required and should be a string\r\n      JWT_EXPIRATION?: string; // JWT_EXPIRATION can be optional\r\n    }\r\n  }\r\n}\r\n\r\n// Destructure and validate environment variables with defaults\r\nconst {\r\n  DB_HOST = 'localhost',\r\n  DB_USER = 'root',\r\n  DB_PASSWORD = '',\r\n  DB_NAME = 'fivver_doup',\r\n  DB_PORT = '3306',\r\n  NODE_ENV = 'development',\r\n  JWT_SECRET = 'your-secret-key', // Default value for JWT_SECRET\r\n  JWT_EXPIRATION = '1h', // Default value for JWT_EXPIRATION\r\n}: NodeJS.ProcessEnv = process.env;\r\n\r\n// Validate critical environment variables\r\nif (\r\n  NODE_ENV !== 'test' &&\r\n  (!DB_HOST || !DB_USER || !DB_NAME || !DB_PORT || !JWT_SECRET)\r\n) {\r\n  console.error(\r\n    'Missing required environment variables. Check your .env file.'\r\n  );\r\n  process.exit(1); // Exit the process if critical variables are missing\r\n}\r\n\r\n// Ensure that DB_PORT is an integer\r\nconst parsedDBPort = parseInt(DB_PORT, 10);\r\nif (isNaN(parsedDBPort)) {\r\n  console.error('DB_PORT must be a valid number.');\r\n  process.exit(1);\r\n}\r\n\r\n// Config object for the application\r\nconst config = {\r\n  db: {\r\n    host: DB_HOST as string, // Explicitly cast to string\r\n    user: DB_USER as string, // Explicitly cast to string\r\n    password: DB_PASSWORD as string, // Explicitly cast to string\r\n    database: DB_NAME as string, // Explicitly cast to string\r\n    port: parsedDBPort, // Use parsed value from DB_PORT\r\n  },\r\n  nodeEnv: NODE_ENV as string, // Explicitly cast to string\r\n  JWT_SECRET, // Use as-is since it's required and a string\r\n  JWT_EXPIRATION, // Use as-is since it's already a string\r\n};\r\n\r\n// Export the configuration\r\nexport default config;\r\n"],"names":["dotenv","config","DB_HOST","DB_USER","DB_PASSWORD","DB_NAME","DB_PORT","NODE_ENV","JWT_SECRET","JWT_EXPIRATION","process","env","console","error","exit","parsedDBPort","parseInt","isNaN","db","host","user","password","database","port","nodeEnv"],"mappings":";;;;+BAiEA,2BAA2B;AAC3B;;;eAAA;;;+DAlEmB;;;;;;AAEnB,gDAAgD;AAChDA,eAAM,CAACC,MAAM;AAkBb,+DAA+D;AAC/D,MAAM,EACJC,UAAU,WAAW,EACrBC,UAAU,MAAM,EAChBC,cAAc,EAAE,EAChBC,UAAU,aAAa,EACvBC,UAAU,MAAM,EAChBC,WAAW,aAAa,EACxBC,aAAa,iBAAiB,EAC9BC,iBAAiB,IAAI,EACtB,GAAsBC,QAAQC,GAAG;AAElC,0CAA0C;AAC1C,IACEJ,aAAa,UACZ,CAAA,CAACL,WAAW,CAACC,WAAW,CAACE,WAAW,CAACC,WAAW,CAACE,UAAS,GAC3D;IACAI,QAAQC,KAAK,CACX;IAEFH,QAAQI,IAAI,CAAC,IAAI,qDAAqD;AACxE;AAEA,oCAAoC;AACpC,MAAMC,eAAeC,SAASV,SAAS;AACvC,IAAIW,MAAMF,eAAe;IACvBH,QAAQC,KAAK,CAAC;IACdH,QAAQI,IAAI,CAAC;AACf;AAEA,oCAAoC;AACpC,MAAMb,SAAS;IACbiB,IAAI;QACFC,MAAMjB;QACNkB,MAAMjB;QACNkB,UAAUjB;QACVkB,UAAUjB;QACVkB,MAAMR;IACR;IACAS,SAASjB;IACTC;IACAC;AACF;MAGA,WAAeR"}