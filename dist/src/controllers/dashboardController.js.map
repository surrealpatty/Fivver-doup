{"version":3,"sources":["../../../src/controllers/dashboardController.ts"],"sourcesContent":["// src/controllers/dashboardController.ts\r\nimport { Request, Response } from 'express';\r\nimport Service from '../models/services';  // Assuming this model exists\r\nimport { Order } from '../models/order';  // Assuming this model exists\r\n\r\nexport const getDashboardData = async (req: Request, res: Response) => {\r\n  try {\r\n    // Ensure that req.user is defined before using it\r\n    if (!req.user) {\r\n      return res.status(401).json({ message: 'User not authenticated.' });\r\n    }\r\n\r\n    const userId = req.user.id;  // Extract user ID from the authenticated user\r\n\r\n    // Fetch user services and orders (no ratings since there's no ratings model)\r\n    const services = await Service.findAll({ where: { userId } });\r\n    const orders = await Order.findAll({ where: { userId } });\r\n\r\n    // Return the fetched data\r\n    res.json({ services, orders });\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: 'Error fetching dashboard data' });\r\n  }\r\n};\r\n"],"names":["getDashboardData","req","res","user","status","json","message","userId","id","services","Service","findAll","where","orders","Order","err","console","error"],"mappings":"AAAA,yCAAyC;;;;;+BAK5BA;;;eAAAA;;;iEAHO;uBACE;;;;;;AAEf,MAAMA,mBAAmB,OAAOC,KAAcC;IACnD,IAAI;QACF,kDAAkD;QAClD,IAAI,CAACD,IAAIE,IAAI,EAAE;YACb,OAAOD,IAAIE,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAA0B;QACnE;QAEA,MAAMC,SAASN,IAAIE,IAAI,CAACK,EAAE,EAAG,8CAA8C;QAE3E,6EAA6E;QAC7E,MAAMC,WAAW,MAAMC,iBAAO,CAACC,OAAO,CAAC;YAAEC,OAAO;gBAAEL;YAAO;QAAE;QAC3D,MAAMM,SAAS,MAAMC,YAAK,CAACH,OAAO,CAAC;YAAEC,OAAO;gBAAEL;YAAO;QAAE;QAEvD,0BAA0B;QAC1BL,IAAIG,IAAI,CAAC;YAAEI;YAAUI;QAAO;IAC9B,EAAE,OAAOE,KAAK;QACZC,QAAQC,KAAK,CAACF;QACdb,IAAIE,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAgC;IAClE;AACF"}