{"version":3,"sources":["../../../src/controllers/profileController.ts"],"sourcesContent":["// src/controllers/profileController.ts\r\nimport { Request, Response } from 'express';\r\nimport { User } from '@models/user';  // Ensure correct import for User model\r\n\r\n// GET /profile - Get user profile\r\nexport const getProfile = async (req: Request, res: Response): Promise<void> => {\r\n  const userId = req.user?.id;  // Extract user id from the token\r\n\r\n  try {\r\n    // Find the user by their ID\r\n    const user = await User.findByPk(userId);\r\n    if (!user) {\r\n      res.status(404).json({ message: 'User not found' });\r\n      return;\r\n    }\r\n\r\n    res.status(200).json({\r\n      id: user.id,\r\n      email: user.email,\r\n      username: user.username,\r\n      role: user.role,\r\n      tier: user.tier,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: 'Internal server error' });\r\n  }\r\n};\r\n\r\n// PUT /profile - Update user profile\r\nexport const updateProfile = async (req: Request, res: Response): Promise<void> => {\r\n  const userId = req.user?.id;  // Extract user id from the token\r\n  const { email, username } = req.body;\r\n\r\n  try {\r\n    // Find the user and update their details\r\n    const user = await User.findByPk(userId);\r\n    if (!user) {\r\n      res.status(404).json({ message: 'User not found' });\r\n      return;\r\n    }\r\n\r\n    user.email = email || user.email;  // If email is provided, update it, else keep current value\r\n    user.username = username || user.username;  // Same for username\r\n    await user.save();\r\n\r\n    res.status(200).json({\r\n      message: 'Profile updated successfully',\r\n      user: {\r\n        id: user.id,\r\n        email: user.email,\r\n        username: user.username,\r\n        role: user.role,\r\n        tier: user.tier,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.status(500).json({ message: 'Internal server error' });\r\n  }\r\n};\r\n"],"names":["getProfile","updateProfile","req","res","userId","user","id","User","findByPk","status","json","message","email","username","role","tier","err","console","error","body","save"],"mappings":"AAAA,uCAAuC;;;;;;;;;;;;IAK1BA,UAAU;eAAVA;;IAyBAC,aAAa;eAAbA;;;sBA5BQ;AAGd,MAAMD,aAAa,OAAOE,KAAcC;IAC7C,MAAMC,SAASF,IAAIG,IAAI,EAAEC,IAAK,iCAAiC;IAE/D,IAAI;QACF,4BAA4B;QAC5B,MAAMD,OAAO,MAAME,UAAI,CAACC,QAAQ,CAACJ;QACjC,IAAI,CAACC,MAAM;YACTF,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAiB;YACjD;QACF;QAEAR,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;YACnBJ,IAAID,KAAKC,EAAE;YACXM,OAAOP,KAAKO,KAAK;YACjBC,UAAUR,KAAKQ,QAAQ;YACvBC,MAAMT,KAAKS,IAAI;YACfC,MAAMV,KAAKU,IAAI;QACjB;IACF,EAAE,OAAOC,KAAK;QACZC,QAAQC,KAAK,CAACF;QACdb,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAwB;IAC1D;AACF;AAGO,MAAMV,gBAAgB,OAAOC,KAAcC;IAChD,MAAMC,SAASF,IAAIG,IAAI,EAAEC,IAAK,iCAAiC;IAC/D,MAAM,EAAEM,KAAK,EAAEC,QAAQ,EAAE,GAAGX,IAAIiB,IAAI;IAEpC,IAAI;QACF,yCAAyC;QACzC,MAAMd,OAAO,MAAME,UAAI,CAACC,QAAQ,CAACJ;QACjC,IAAI,CAACC,MAAM;YACTF,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAiB;YACjD;QACF;QAEAN,KAAKO,KAAK,GAAGA,SAASP,KAAKO,KAAK,EAAG,2DAA2D;QAC9FP,KAAKQ,QAAQ,GAAGA,YAAYR,KAAKQ,QAAQ,EAAG,oBAAoB;QAChE,MAAMR,KAAKe,IAAI;QAEfjB,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;YACnBC,SAAS;YACTN,MAAM;gBACJC,IAAID,KAAKC,EAAE;gBACXM,OAAOP,KAAKO,KAAK;gBACjBC,UAAUR,KAAKQ,QAAQ;gBACvBC,MAAMT,KAAKS,IAAI;gBACfC,MAAMV,KAAKU,IAAI;YACjB;QACF;IACF,EAAE,OAAOC,KAAK;QACZC,QAAQC,KAAK,CAACF;QACdb,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAwB;IAC1D;AACF"}