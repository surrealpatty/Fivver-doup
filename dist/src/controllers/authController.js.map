{"version":3,"sources":["../../../src/controllers/authController.ts"],"sourcesContent":["// src/controllers/authController.ts\r\nimport { Request, Response } from 'express';\r\nimport bcrypt from 'bcrypt';\r\nimport { User } from '../models/user';\r\n\r\nexport const registerUser = async (req: Request, res: Response) => {\r\n    const { email, username, password } = req.body;\r\n\r\n    // Input validation\r\n    if (!email || !username || !password) {\r\n        return res.status(400).json({ message: 'Please provide all fields' });\r\n    }\r\n\r\n    // Check if user already exists\r\n    const existingUser = await User.findOne({ where: { email } });\r\n    if (existingUser) {\r\n        return res.status(400).json({ message: 'User already exists' });\r\n    }\r\n\r\n    // Hash the password\r\n    const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n    // Create the new user\r\n    try {\r\n        const user = await User.create({ email, username, password: hashedPassword });\r\n\r\n        // Respond with user data (you can exclude the password for security)\r\n        res.status(201).json({ id: user.id, email: user.email, username: user.username });\r\n    } catch (error) {\r\n        console.error(error);\r\n        res.status(500).json({ message: 'Server error during registration' });\r\n    }\r\n};\r\n"],"names":["registerUser","req","res","email","username","password","body","status","json","message","existingUser","User","findOne","where","hashedPassword","bcrypt","hash","user","create","id","error","console"],"mappings":"AAAA,oCAAoC;;;;;+BAKvBA;;;eAAAA;;;+DAHM;sBACE;;;;;;AAEd,MAAMA,eAAe,OAAOC,KAAcC;IAC7C,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAE,GAAGJ,IAAIK,IAAI;IAE9C,mBAAmB;IACnB,IAAI,CAACH,SAAS,CAACC,YAAY,CAACC,UAAU;QAClC,OAAOH,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAA4B;IACvE;IAEA,+BAA+B;IAC/B,MAAMC,eAAe,MAAMC,UAAI,CAACC,OAAO,CAAC;QAAEC,OAAO;YAAEV;QAAM;IAAE;IAC3D,IAAIO,cAAc;QACd,OAAOR,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAsB;IACjE;IAEA,oBAAoB;IACpB,MAAMK,iBAAiB,MAAMC,eAAM,CAACC,IAAI,CAACX,UAAU;IAEnD,sBAAsB;IACtB,IAAI;QACA,MAAMY,OAAO,MAAMN,UAAI,CAACO,MAAM,CAAC;YAAEf;YAAOC;YAAUC,UAAUS;QAAe;QAE3E,qEAAqE;QACrEZ,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEW,IAAIF,KAAKE,EAAE;YAAEhB,OAAOc,KAAKd,KAAK;YAAEC,UAAUa,KAAKb,QAAQ;QAAC;IACnF,EAAE,OAAOgB,OAAO;QACZC,QAAQD,KAAK,CAACA;QACdlB,IAAIK,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAmC;IACvE;AACJ"}