{"version":3,"sources":["../../../src/routes/auth.ts"],"sourcesContent":["// src/routes/auth.ts\r\nimport { Router, Request, Response } from 'express';\r\nimport { User } from '@models/user';  // Correct import for User model\r\n\r\nconst router = Router();\r\n\r\nrouter.post('/register', async (req: Request, res: Response): Promise<void> => {\r\n  const { email, username, password, role = 'free', tier = 'free' } = req.body; // Default role and tier\r\n\r\n  try {\r\n    // Hash password before saving user\r\n    const hashedPassword = await bcrypt.hash(password, 10);\r\n\r\n    const user = await User.create({\r\n      email,\r\n      username,\r\n      password: hashedPassword,\r\n      role,\r\n      tier,\r\n    });\r\n\r\n    res.status(201).json({ message: 'User created successfully', user });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ message: 'Error creating user' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"names":["router","Router","post","req","res","email","username","password","role","tier","body","hashedPassword","bcrypt","hash","user","User","create","status","json","message","error","console"],"mappings":"AAAA,qBAAqB;;;;;+BA4BrB;;;eAAA;;;yBA3B0C;sBACrB;AAErB,MAAMA,SAASC,IAAAA,eAAM;AAErBD,OAAOE,IAAI,CAAC,aAAa,OAAOC,KAAcC;IAC5C,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,MAAM,EAAEC,OAAO,MAAM,EAAE,GAAGN,IAAIO,IAAI,EAAE,wBAAwB;IAEtG,IAAI;QACF,mCAAmC;QACnC,MAAMC,iBAAiB,MAAMC,OAAOC,IAAI,CAACN,UAAU;QAEnD,MAAMO,OAAO,MAAMC,UAAI,CAACC,MAAM,CAAC;YAC7BX;YACAC;YACAC,UAAUI;YACVH;YACAC;QACF;QAEAL,IAAIa,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;YAA6BL;QAAK;IACpE,EAAE,OAAOM,OAAO;QACdC,QAAQD,KAAK,CAACA;QACdhB,IAAIa,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAsB;IACxD;AACF;MAEA,WAAenB"}