{"version":3,"sources":["../../../src/routes/review.ts"],"sourcesContent":["import express, { Request, Response, RequestHandler } from 'express';\r\nimport {\r\n  createReview,\r\n  getReviewsForService,\r\n  updateReview,\r\n  deleteReview,\r\n} from '../controllers/reviewController'; // Ensure correct import path\r\nimport { authenticateToken } from '../middlewares/authMiddleware'; // Ensure correct import path\r\n\r\nconst router = express.Router();\r\n\r\n// Route to create a new review (requires authentication)\r\nrouter.post('/', authenticateToken, createReview as RequestHandler);\r\n\r\n// Route to get reviews for a specific service\r\nrouter.get('/:serviceId', getReviewsForService as RequestHandler);\r\n\r\n// Route to update a review (requires authentication)\r\nrouter.put('/:reviewId', authenticateToken, updateReview as RequestHandler);\r\n\r\n// Route to delete a review (requires authentication)\r\nrouter.delete('/:reviewId', authenticateToken, deleteReview as RequestHandler);\r\n\r\n// Optional: Health check or confirmation route\r\nrouter.get('/health', (_req: Request, res: Response): void => {\r\n  // Return the health check response with a message\r\n  res.json({ message: 'Reviews route is working!' });\r\n});\r\n\r\nexport default router;\r\n"],"names":["router","express","Router","post","authenticateToken","createReview","get","getReviewsForService","put","updateReview","delete","deleteReview","_req","res","json","message"],"mappings":";;;;+BA6BA;;;eAAA;;;gEA7B2D;kCAMpD;gCAC2B;;;;;;AAElC,MAAMA,SAASC,gBAAO,CAACC,MAAM;AAE7B,yDAAyD;AACzDF,OAAOG,IAAI,CAAC,KAAKC,iCAAiB,EAAEC,8BAAY;AAEhD,8CAA8C;AAC9CL,OAAOM,GAAG,CAAC,eAAeC,sCAAoB;AAE9C,qDAAqD;AACrDP,OAAOQ,GAAG,CAAC,cAAcJ,iCAAiB,EAAEK,8BAAY;AAExD,qDAAqD;AACrDT,OAAOU,MAAM,CAAC,cAAcN,iCAAiB,EAAEO,8BAAY;AAE3D,+CAA+C;AAC/CX,OAAOM,GAAG,CAAC,WAAW,CAACM,MAAeC;IACpC,kDAAkD;IAClDA,IAAIC,IAAI,CAAC;QAAEC,SAAS;IAA4B;AAClD;MAEA,WAAef"}