{"version":3,"sources":["../../../src/routes/service.ts"],"sourcesContent":["import { Router, Request, Response, NextFunction } from 'express';\r\nimport { AuthRequest } from '../types'; // Correct import path for AuthRequest\r\nimport { authenticateJWT } from '../middlewares/authMiddleware'; // Correct import for authenticateJWT\r\nimport { updateService } from '../controllers/serviceController'; // Import the controller function\r\n\r\nconst router = Router();\r\n\r\n// PUT route for updating a service by ID\r\nrouter.put('/services/:id', authenticateJWT, async (req: AuthRequest, res: Response, next: NextFunction): Promise<void> => {\r\n  try {\r\n    // Call the updateService controller function and wait for it to complete\r\n    await updateService(req, res); // The controller function will handle the request and response\r\n  } catch (err) {\r\n    next(err); // Pass any errors to the error handling middleware\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"names":["router","Router","put","authenticateJWT","req","res","next","updateService","err"],"mappings":";;;;+BAiBA;;;eAAA;;;yBAjBwD;gCAExB;mCACF;AAE9B,MAAMA,SAASC,IAAAA,eAAM;AAErB,yCAAyC;AACzCD,OAAOE,GAAG,CAAC,iBAAiBC,+BAAe,EAAE,OAAOC,KAAkBC,KAAeC;IACnF,IAAI;QACF,yEAAyE;QACzE,MAAMC,IAAAA,gCAAa,EAACH,KAAKC,MAAM,+DAA+D;IAChG,EAAE,OAAOG,KAAK;QACZF,KAAKE,MAAM,mDAAmD;IAChE;AACF;MAEA,WAAeR"}