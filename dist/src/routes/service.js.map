{"version":3,"sources":["../../../src/routes/service.ts"],"sourcesContent":["// src/routes/service.ts\r\nimport express, { Response, Request, NextFunction } from 'express';\r\nimport { AuthRequest } from '../types/index'; // Ensure correct import path\r\nimport { authenticateToken } from '../middlewares/authMiddleware';\r\nimport { checkTier } from '../middlewares/tierMiddleware';\r\nimport Service from '../models/services'; // Correct import for Service model\r\n\r\nconst router = express.Router();\r\n\r\nrouter.post(\r\n  '/',\r\n  authenticateToken,\r\n  checkTier('paid'), // Ensure checkTier is a valid middleware function\r\n  async (req: AuthRequest, res: Response): Promise<void> => { // Return type should be void, not Response\r\n    try {\r\n      const { title, description, price } = req.body;\r\n\r\n      if (!title || !description || price === undefined) {\r\n        res.status(400).json({ message: 'All fields are required.' });\r\n        return; // End the function early if there are validation errors\r\n      }\r\n\r\n      const userId = parseInt(req.user?.id || '', 10);\r\n      if (isNaN(userId)) {\r\n        res.status(400).json({ message: 'Invalid user ID.' });\r\n        return; // End the function early if user ID is invalid\r\n      }\r\n\r\n      const service = await Service.create({\r\n        userId,\r\n        title,\r\n        description,\r\n        price,\r\n      });\r\n\r\n      res.status(201).json({ message: 'Service created successfully.', service });\r\n    } catch (error) {\r\n      console.error(error);\r\n      res.status(500).json({ message: 'Internal server error.', error });\r\n    }\r\n  }\r\n);\r\n\r\nexport default router;\r\n"],"names":["router","express","Router","post","authenticateToken","checkTier","req","res","title","description","price","body","undefined","status","json","message","userId","parseInt","user","id","isNaN","service","Service","create","error","console"],"mappings":"AAAA,wBAAwB;;;;;+BA2CxB;;;eAAA;;;gEA1CyD;gCAEvB;gCACR;iEACN;;;;;;AAEpB,MAAMA,SAASC,gBAAO,CAACC,MAAM;AAE7BF,OAAOG,IAAI,CACT,KACAC,iCAAiB,EACjBC,IAAAA,yBAAS,EAAC,SACV,OAAOC,KAAkBC;IACvB,IAAI;QACF,MAAM,EAAEC,KAAK,EAAEC,WAAW,EAAEC,KAAK,EAAE,GAAGJ,IAAIK,IAAI;QAE9C,IAAI,CAACH,SAAS,CAACC,eAAeC,UAAUE,WAAW;YACjDL,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAA2B;YAC3D,QAAQ,wDAAwD;QAClE;QAEA,MAAMC,SAASC,SAASX,IAAIY,IAAI,EAAEC,MAAM,IAAI;QAC5C,IAAIC,MAAMJ,SAAS;YACjBT,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAmB;YACnD,QAAQ,+CAA+C;QACzD;QAEA,MAAMM,UAAU,MAAMC,iBAAO,CAACC,MAAM,CAAC;YACnCP;YACAR;YACAC;YACAC;QACF;QAEAH,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;YAAiCM;QAAQ;IAC3E,EAAE,OAAOG,OAAO;QACdC,QAAQD,KAAK,CAACA;QACdjB,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;YAA0BS;QAAM;IAClE;AACF;MAGF,WAAexB"}