{"version":3,"sources":["../../../src/routes/api.ts"],"sourcesContent":["// src/routes/api.ts\r\n\r\nimport { Router, Request, Response, NextFunction } from 'express';\r\nimport { authenticateJWT } from '../middlewares/authMiddleware';\r\nimport { AuthRequest } from '../types/authMiddleware';\r\n\r\nconst router = Router();\r\n\r\nrouter.post('/services', authenticateJWT, async (req: AuthRequest, res: Response): Promise<void> => {\r\n  if (!req.user) {\r\n    res.status(403).json({ message: 'User not authenticated' });\r\n    return;  // Ensure flow terminates after returning the response\r\n  }\r\n\r\n  if (!req.user.tier) {\r\n    res.status(400).json({ message: 'User tier is missing' });\r\n    return;  // Ensure flow terminates after returning the response\r\n  }\r\n\r\n  // Proceed with creating or updating the service logic here...\r\n  res.status(201).json({ message: 'Service created successfully' });\r\n});\r\n"],"names":["router","Router","post","authenticateJWT","req","res","user","status","json","message","tier"],"mappings":"AAAA,oBAAoB;;;;;yBAEoC;gCACxB;AAGhC,MAAMA,SAASC,IAAAA,eAAM;AAErBD,OAAOE,IAAI,CAAC,aAAaC,+BAAe,EAAE,OAAOC,KAAkBC;IACjE,IAAI,CAACD,IAAIE,IAAI,EAAE;QACbD,IAAIE,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAyB;QACzD,QAAS,sDAAsD;IACjE;IAEA,IAAI,CAACL,IAAIE,IAAI,CAACI,IAAI,EAAE;QAClBL,IAAIE,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEC,SAAS;QAAuB;QACvD,QAAS,sDAAsD;IACjE;IAEA,8DAA8D;IAC9DJ,IAAIE,MAAM,CAAC,KAAKC,IAAI,CAAC;QAAEC,SAAS;IAA+B;AACjE"}