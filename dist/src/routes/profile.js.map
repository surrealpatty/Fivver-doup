{"version":3,"sources":["../../../src/routes/profile.ts"],"sourcesContent":["import { Router, Request, Response, NextFunction } from 'express';\r\nimport { AuthRequest } from '../types'; // Correct import path for AuthRequest\r\nimport { authenticateJWT } from '../middlewares/authMiddleware'; // Correct import for authenticateJWT\r\nimport Service from '@models/services'; // Ensure alias for services model is working correctly\r\n\r\nconst router = Router();\r\n\r\n// GET route for retrieving user profile and associated services\r\nrouter.get('/profile', authenticateJWT, async (req: AuthRequest, res: Response, next: NextFunction): Promise<void> => {\r\n  try {\r\n    const user = req.user;  // req.user comes from the authenticateJWT middleware\r\n\r\n    // Check if the user exists\r\n    if (!user) {\r\n      res.status(403).json({ message: 'User not authenticated' });\r\n      return;\r\n    }\r\n\r\n    // Fetch the services associated with the user from the database\r\n    const services = await Service.findAll({ where: { userId: user.id } });\r\n\r\n    // Respond with the user data and the user's services\r\n    res.status(200).json({ user, services });\r\n  } catch (error) {\r\n    console.error('Error fetching profile:', error);\r\n    next(error);  // Pass the error to the next error handler\r\n  }\r\n});\r\n\r\nexport default router;  // Correct default export for the router\r\n"],"names":["router","Router","get","authenticateJWT","req","res","next","user","status","json","message","services","Service","findAll","where","userId","id","error","console"],"mappings":";;;;+BA6BA,UAAwB,wCAAwC;;;;eAAhE;;;yBA7BwD;gCAExB;iEACZ;;;;;;AAEpB,MAAMA,SAASC,IAAAA,eAAM;AAErB,gEAAgE;AAChED,OAAOE,GAAG,CAAC,YAAYC,+BAAe,EAAE,OAAOC,KAAkBC,KAAeC;IAC9E,IAAI;QACF,MAAMC,OAAOH,IAAIG,IAAI,EAAG,qDAAqD;QAE7E,2BAA2B;QAC3B,IAAI,CAACA,MAAM;YACTF,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;gBAAEC,SAAS;YAAyB;YACzD;QACF;QAEA,gEAAgE;QAChE,MAAMC,WAAW,MAAMC,iBAAO,CAACC,OAAO,CAAC;YAAEC,OAAO;gBAAEC,QAAQR,KAAKS,EAAE;YAAC;QAAE;QAEpE,qDAAqD;QACrDX,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAAC;YAAEF;YAAMI;QAAS;IACxC,EAAE,OAAOM,OAAO;QACdC,QAAQD,KAAK,CAAC,2BAA2BA;QACzCX,KAAKW,QAAS,2CAA2C;IAC3D;AACF;MAEA,WAAejB"}