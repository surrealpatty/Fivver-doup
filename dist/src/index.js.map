{"version":3,"sources":["../../src/index.ts"],"sourcesContent":["import express, { Request, Response, NextFunction } from 'express';  // Import NextFunction\r\nimport cors from 'cors';\r\nimport { sequelize } from './config/database'; // Correct import for sequelize\r\nimport userRouter from './routes/user'; // Default import for userRouter\r\nimport profileRouter from './routes/profile'; // Default import for profileRouter\r\nimport authRouter from './routes/auth'; // Default import for authRouter\r\nimport dotenv from 'dotenv'; // For loading environment variables\r\nimport './types/express';  // Ensure this import is present to load the augmentation\r\n\r\ndotenv.config(); // Load environment variables from .env\r\n\r\nconst app = express();\r\n\r\n// Set up the server port, defaulting to process.env.PORT or 3000\r\nconst port = process.env.PORT || 3000; // Default port is 3000, can be overridden for testing\r\n\r\n// Middleware to parse JSON bodies\r\napp.use(express.json());\r\n\r\n// Enable CORS (if needed for handling cross-origin requests)\r\napp.use(cors());\r\n\r\n// Example route to test the server\r\napp.get('/', (_req: Request, res: Response) => {\r\n  res.send('Welcome to Fiverr Clone!');\r\n});\r\n\r\n// Synchronize models with the database\r\nsequelize.sync({ alter: true }) // Using 'alter' to ensure no data loss\r\n  .then(() => {\r\n    console.log('Models are synchronized with the database.');\r\n  })\r\n  .catch((error: Error) => {\r\n    console.error('Error syncing models:', error);\r\n  });\r\n\r\n// Use the userRouter for routes starting with /api/users\r\napp.use('/api/users', userRouter); // Register the user routes under /api/users\r\n\r\n// Register the profile route under /api/profile\r\napp.use('/api/profile', profileRouter); // Register profile route\r\n\r\n// Register the auth route under /api/auth\r\napp.use('/api/auth', authRouter); // Register auth route for user registration/login\r\n\r\n// Test database connection\r\nsequelize.authenticate()\r\n  .then(() => {\r\n    console.log('Database connection established.');\r\n  })\r\n  .catch((error) => {\r\n    console.error('Unable to connect to the database:', error);\r\n  });\r\n\r\n// Global error handler middleware - Fix the signature with `NextFunction`\r\napp.use((err: any, _req: Request, res: Response, _next: NextFunction) => {  // Added NextFunction\r\n  console.error(err);  // Log the error\r\n  res.status(500).json({ message: 'Something went wrong!' });  // Send generic error response\r\n});\r\n\r\n// Start the server on dynamic port (use process.env.PORT or 3000)\r\nconst server = app.listen(port, () => {\r\n  console.log(`Server is running on port ${port}`);\r\n});\r\n\r\n// Export app and server for use in tests or other parts of the application\r\nexport { app, server }; // Export both app and server instance for testing or server shutdown\r\n"],"names":["app","server","dotenv","config","express","port","process","env","PORT","use","json","cors","get","_req","res","send","sequelize","sync","alter","then","console","log","catch","error","userRouter","profileRouter","authRouter","authenticate","err","_next","status","message","listen"],"mappings":";;;;;;;;;;;IAkESA,GAAG;eAAHA;;IAAKC,MAAM;eAANA;;;gEAlE2C;6DACxC;0BACS;6DACH;gEACG;6DACH;+DACJ;QACZ;;;;;;AAEPC,eAAM,CAACC,MAAM,IAAI,uCAAuC;AAExD,MAAMH,MAAMI,IAAAA,gBAAO;AAEnB,iEAAiE;AACjE,MAAMC,OAAOC,QAAQC,GAAG,CAACC,IAAI,IAAI,MAAM,sDAAsD;AAE7F,kCAAkC;AAClCR,IAAIS,GAAG,CAACL,gBAAO,CAACM,IAAI;AAEpB,6DAA6D;AAC7DV,IAAIS,GAAG,CAACE,IAAAA,aAAI;AAEZ,mCAAmC;AACnCX,IAAIY,GAAG,CAAC,KAAK,CAACC,MAAeC;IAC3BA,IAAIC,IAAI,CAAC;AACX;AAEA,uCAAuC;AACvCC,mBAAS,CAACC,IAAI,CAAC;IAAEC,OAAO;AAAK,GAAG,uCAAuC;CACpEC,IAAI,CAAC;IACJC,QAAQC,GAAG,CAAC;AACd,GACCC,KAAK,CAAC,CAACC;IACNH,QAAQG,KAAK,CAAC,yBAAyBA;AACzC;AAEF,yDAAyD;AACzDvB,IAAIS,GAAG,CAAC,cAAce,aAAU,GAAG,4CAA4C;AAE/E,gDAAgD;AAChDxB,IAAIS,GAAG,CAAC,gBAAgBgB,gBAAa,GAAG,yBAAyB;AAEjE,0CAA0C;AAC1CzB,IAAIS,GAAG,CAAC,aAAaiB,aAAU,GAAG,kDAAkD;AAEpF,2BAA2B;AAC3BV,mBAAS,CAACW,YAAY,GACnBR,IAAI,CAAC;IACJC,QAAQC,GAAG,CAAC;AACd,GACCC,KAAK,CAAC,CAACC;IACNH,QAAQG,KAAK,CAAC,sCAAsCA;AACtD;AAEF,0EAA0E;AAC1EvB,IAAIS,GAAG,CAAC,CAACmB,KAAUf,MAAeC,KAAee;IAC/CT,QAAQG,KAAK,CAACK,MAAO,gBAAgB;IACrCd,IAAIgB,MAAM,CAAC,KAAKpB,IAAI,CAAC;QAAEqB,SAAS;IAAwB,IAAK,8BAA8B;AAC7F;AAEA,kEAAkE;AAClE,MAAM9B,SAASD,IAAIgC,MAAM,CAAC3B,MAAM;IAC9Be,QAAQC,GAAG,CAAC,CAAC,0BAA0B,EAAEhB,MAAM;AACjD;CAGwB,qEAAqE"}