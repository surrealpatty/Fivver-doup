{"version":3,"sources":["../../src/index.ts"],"sourcesContent":["import express from 'express';\r\nimport dotenv from 'dotenv'; // For loading environment variables\r\nimport { sequelize } from '@config/database'; // Correctly use the alias path to resolve config/database\r\nimport userRouter from './routes/user'; // User routes\r\nimport testEmailRoute from './routes/testEmailRoute'; // Test email route\r\nimport { User } from '@models/user'; // Correct alias for models\r\n\r\n// Load environment variables from .env file\r\ndotenv.config();\r\n\r\n// Initialize Express app\r\nconst app = express();\r\n\r\n// Verify necessary environment variables are set\r\nconst port = process.env.PORT || 3000; // Default to 3000 if not provided\r\nconst dbName = process.env.DB_NAME;\r\nconst dbUser = process.env.DB_USER;\r\nconst dbPassword = process.env.DB_PASSWORD;\r\nconst dbHost = process.env.DB_HOST;\r\n\r\nif (!dbName || !dbUser || !dbPassword || !dbHost) {\r\n  console.error('Missing required environment variables for database connection.');\r\n  process.exit(1); // Exit the app if critical variables are missing\r\n}\r\n\r\n// Middleware to parse JSON bodies\r\napp.use(express.json());\r\n\r\n// Register routes\r\napp.use('/api/users', userRouter); // All user-related routes\r\napp.use('/test', testEmailRoute); // Test email route\r\n\r\n// Root route\r\napp.get('/', (req, res) => {\r\n  res.send('Welcome to Fiverr Clone!');\r\n});\r\n\r\n// Verify database connection\r\nsequelize\r\n  .authenticate()\r\n  .then(() => {\r\n    console.log('Database connection established.');\r\n  })\r\n  .catch((error: Error) => {\r\n    console.error('Unable to connect to the database:', error);\r\n    process.exit(1); // Exit the process if database connection fails\r\n  });\r\n\r\n// Sync models with the database\r\nsequelize\r\n  .sync()\r\n  .then(() => {\r\n    console.log('Database synced successfully.');\r\n  })\r\n  .catch((err: Error) => {\r\n    console.error('Error syncing database:', err);\r\n    process.exit(1); // Exit the process if syncing fails\r\n  });\r\n\r\n// Fetch users as a test (ensure it runs after the database sync)\r\nsequelize\r\n  .sync()\r\n  .then(async () => {\r\n    try {\r\n      const users = await User.findAll();\r\n      console.log('Users:', users);\r\n    } catch (error: any) {\r\n      console.error('Error fetching users:', error.message);\r\n    }\r\n  });\r\n\r\n// Start the server\r\napp.listen(port, () => {\r\n  console.log(`Server is running on http://localhost:${port}`);\r\n});\r\n\r\n// Export app for testing\r\nexport default app;\r\n"],"names":["dotenv","config","app","express","port","process","env","PORT","dbName","DB_NAME","dbUser","DB_USER","dbPassword","DB_PASSWORD","dbHost","DB_HOST","console","error","exit","use","json","userRouter","testEmailRoute","get","req","res","send","sequelize","authenticate","then","log","catch","sync","err","users","User","findAll","message","listen"],"mappings":";;;;+BA4EA,yBAAyB;AACzB;;;eAAA;;;gEA7EoB;+DACD;0BACO;6DACH;uEACI;uBACN;;;;;;AAErB,4CAA4C;AAC5CA,eAAM,CAACC,MAAM;AAEb,yBAAyB;AACzB,MAAMC,MAAMC,IAAAA,gBAAO;AAEnB,iDAAiD;AACjD,MAAMC,OAAOC,QAAQC,GAAG,CAACC,IAAI,IAAI,MAAM,kCAAkC;AACzE,MAAMC,SAASH,QAAQC,GAAG,CAACG,OAAO;AAClC,MAAMC,SAASL,QAAQC,GAAG,CAACK,OAAO;AAClC,MAAMC,aAAaP,QAAQC,GAAG,CAACO,WAAW;AAC1C,MAAMC,SAAST,QAAQC,GAAG,CAACS,OAAO;AAElC,IAAI,CAACP,UAAU,CAACE,UAAU,CAACE,cAAc,CAACE,QAAQ;IAChDE,QAAQC,KAAK,CAAC;IACdZ,QAAQa,IAAI,CAAC,IAAI,iDAAiD;AACpE;AAEA,kCAAkC;AAClChB,IAAIiB,GAAG,CAAChB,gBAAO,CAACiB,IAAI;AAEpB,kBAAkB;AAClBlB,IAAIiB,GAAG,CAAC,cAAcE,aAAU,GAAG,0BAA0B;AAC7DnB,IAAIiB,GAAG,CAAC,SAASG,uBAAc,GAAG,mBAAmB;AAErD,aAAa;AACbpB,IAAIqB,GAAG,CAAC,KAAK,CAACC,KAAKC;IACjBA,IAAIC,IAAI,CAAC;AACX;AAEA,6BAA6B;AAC7BC,mBAAS,CACNC,YAAY,GACZC,IAAI,CAAC;IACJb,QAAQc,GAAG,CAAC;AACd,GACCC,KAAK,CAAC,CAACd;IACND,QAAQC,KAAK,CAAC,sCAAsCA;IACpDZ,QAAQa,IAAI,CAAC,IAAI,gDAAgD;AACnE;AAEF,gCAAgC;AAChCS,mBAAS,CACNK,IAAI,GACJH,IAAI,CAAC;IACJb,QAAQc,GAAG,CAAC;AACd,GACCC,KAAK,CAAC,CAACE;IACNjB,QAAQC,KAAK,CAAC,2BAA2BgB;IACzC5B,QAAQa,IAAI,CAAC,IAAI,oCAAoC;AACvD;AAEF,iEAAiE;AACjES,mBAAS,CACNK,IAAI,GACJH,IAAI,CAAC;IACJ,IAAI;QACF,MAAMK,QAAQ,MAAMC,WAAI,CAACC,OAAO;QAChCpB,QAAQc,GAAG,CAAC,UAAUI;IACxB,EAAE,OAAOjB,OAAY;QACnBD,QAAQC,KAAK,CAAC,yBAAyBA,MAAMoB,OAAO;IACtD;AACF;AAEF,mBAAmB;AACnBnC,IAAIoC,MAAM,CAAClC,MAAM;IACfY,QAAQc,GAAG,CAAC,CAAC,sCAAsC,EAAE1B,MAAM;AAC7D;MAGA,WAAeF"}