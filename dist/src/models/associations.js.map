{"version":3,"sources":["../../../src/models/associations.ts"],"sourcesContent":["import { User } from './user';       // Import the User model\r\nimport  Service  from './services'; // Import the Service model (fixing the import to match the model path)\r\nimport { Order } from './order';     // Import the Order model\r\nimport { Review } from './review';   // Import the Review model\r\nimport { sequelize } from '@config/database';  // Import the sequelize instance\r\n\r\n// Define associations after registering models\r\n\r\n// User can have many services (a user can post many services)\r\nUser.hasMany(Service, { foreignKey: 'userId' });  // Foreign key will be userId in Service\r\nService.belongsTo(User, { foreignKey: 'userId' }); // A service belongs to one user\r\n\r\n// User can have many reviews (a user can leave many reviews)\r\nUser.hasMany(Review, { foreignKey: 'userId' });  // Foreign key will be userId in Review\r\nReview.belongsTo(User, { foreignKey: 'userId' }); // A review belongs to one user\r\n\r\n// Service can have many reviews (a service can have many reviews)\r\nService.hasMany(Review, { foreignKey: 'serviceId' });  // Foreign key will be serviceId in Review\r\nReview.belongsTo(Service, { foreignKey: 'serviceId' }); // A review belongs to one service\r\n\r\n// Order belongs to a user and a service (an order is linked to one user and one service)\r\nOrder.belongsTo(User, { foreignKey: 'userId' }); // An order belongs to one user\r\nOrder.belongsTo(Service, { foreignKey: 'serviceId' }); // An order belongs to one service\r\n\r\n// Optionally, sync models to the database\r\nsequelize.sync({ force: false }).then(() => {\r\n  console.log('Model associations are successfully set up.');\r\n});\r\n\r\n// Export the models with their associations\r\nexport { User, Service, Order, Review };\r\n"],"names":["Order","Review","Service","User","hasMany","foreignKey","belongsTo","sequelize","sync","force","then","console","log"],"mappings":";;;;;;;;;;;IA8BwBA,KAAK;eAALA,YAAK;;IAAEC,MAAM;eAANA,cAAM;;IAAtBC,OAAO;eAAPA,iBAAO;;IAAbC,IAAI;eAAJA,UAAI;;;sBA9BQ;iEACC;uBACA;wBACC;0BACG;;;;;;AAE1B,+CAA+C;AAE/C,8DAA8D;AAC9DA,UAAI,CAACC,OAAO,CAACF,iBAAO,EAAE;IAAEG,YAAY;AAAS,IAAK,wCAAwC;AAC1FH,iBAAO,CAACI,SAAS,CAACH,UAAI,EAAE;IAAEE,YAAY;AAAS,IAAI,gCAAgC;AAEnF,6DAA6D;AAC7DF,UAAI,CAACC,OAAO,CAACH,cAAM,EAAE;IAAEI,YAAY;AAAS,IAAK,uCAAuC;AACxFJ,cAAM,CAACK,SAAS,CAACH,UAAI,EAAE;IAAEE,YAAY;AAAS,IAAI,+BAA+B;AAEjF,kEAAkE;AAClEH,iBAAO,CAACE,OAAO,CAACH,cAAM,EAAE;IAAEI,YAAY;AAAY,IAAK,0CAA0C;AACjGJ,cAAM,CAACK,SAAS,CAACJ,iBAAO,EAAE;IAAEG,YAAY;AAAY,IAAI,kCAAkC;AAE1F,yFAAyF;AACzFL,YAAK,CAACM,SAAS,CAACH,UAAI,EAAE;IAAEE,YAAY;AAAS,IAAI,+BAA+B;AAChFL,YAAK,CAACM,SAAS,CAACJ,iBAAO,EAAE;IAAEG,YAAY;AAAY,IAAI,kCAAkC;AAEzF,0CAA0C;AAC1CE,mBAAS,CAACC,IAAI,CAAC;IAAEC,OAAO;AAAM,GAAGC,IAAI,CAAC;IACpCC,QAAQC,GAAG,CAAC;AACd"}