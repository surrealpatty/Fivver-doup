{"version":3,"sources":["../../../src/types/index.ts"],"sourcesContent":["// src/types/index.ts\r\n\r\n// Importing Request from Express for extending the Request type\r\nimport { Request } from 'express'; \r\n\r\n// Interface for user attributes, including required fields like id, username, and email\r\nexport interface IUserAttributes {\r\n  id: string; // UUID or unique identifier for the user\r\n  username: string; // The user's username\r\n  email: string; // The user's email address\r\n  password: string; // The user's hashed password\r\n  isPaid: boolean; // Whether the user has a paid subscription\r\n}\r\n\r\n// Interface for creating a user, excludes the 'id' as it's auto-generated\r\nexport interface IUserCreationAttributes extends Omit<IUserAttributes, 'id'> {\r\n  // All attributes except 'id' are required for creation\r\n}\r\n\r\n// UserPayload interface for authentication or authorization\r\nexport interface UserPayload {\r\n  id: string; // The user's ID (required)\r\n  email: string; // The user's email (required)\r\n  username: string; // The user's username (required)\r\n}\r\n\r\n// Extend the Express Request type to include user object\r\nexport interface AuthRequest extends Request {\r\n  user?: UserPayload; // Optional user object added after authentication\r\n}\r\n\r\n// Interface for service payload, to be used with services in the project\r\nexport interface ServicePayload {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n}\r\n\r\n// Interface for user creation attributes, including only the fields required for creation\r\nexport interface UserCreationAttributes {\r\n  email: string;\r\n  password: string;\r\n  username: string;\r\n  isPaid: boolean;\r\n}\r\n"],"names":[],"mappings":"AAAA,qBAAqB;AAErB,gEAAgE"}