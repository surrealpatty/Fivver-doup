{"version":3,"sources":["../../src/resetDatabase.ts"],"sourcesContent":["import  { sequelize } from './config/database';\r\n// Function to reset the database\r\nconst resetDatabase = async (): Promise<void> => {\r\n  try {\r\n    console.log('Starting database reset process...');\r\n\r\n    // Step 1: Drop all tables in the database\r\n    console.log('Dropping all tables...');\r\n    await sequelize.drop(); // Drops all tables\r\n    console.log('Tables dropped successfully.');\r\n\r\n    // Step 2: Re-sync models to the database (recreates tables)\r\n    console.log('Re-syncing database...');\r\n    await sequelize.sync({ force: true }); // 'force: true' drops and recreates tables\r\n    console.log('Database re-synced successfully!');\r\n  } catch (error) {\r\n    // Handle errors and log them\r\n    console.error('Error resetting the database:', error);\r\n  } finally {\r\n    // Graceful shutdown after completing the task\r\n    console.log('Database reset process complete.');\r\n    process.exit(0); // Exit the process after completion\r\n  }\r\n};\r\n\r\n// Call the function to reset the database\r\nresetDatabase();\r\n\r\n"],"names":["resetDatabase","console","log","sequelize","drop","sync","force","error","process","exit"],"mappings":";;;;0BAA2B;AAC3B,iCAAiC;AACjC,MAAMA,gBAAgB;IACpB,IAAI;QACFC,QAAQC,GAAG,CAAC;QAEZ,0CAA0C;QAC1CD,QAAQC,GAAG,CAAC;QACZ,MAAMC,mBAAS,CAACC,IAAI,IAAI,mBAAmB;QAC3CH,QAAQC,GAAG,CAAC;QAEZ,4DAA4D;QAC5DD,QAAQC,GAAG,CAAC;QACZ,MAAMC,mBAAS,CAACE,IAAI,CAAC;YAAEC,OAAO;QAAK,IAAI,2CAA2C;QAClFL,QAAQC,GAAG,CAAC;IACd,EAAE,OAAOK,OAAO;QACd,6BAA6B;QAC7BN,QAAQM,KAAK,CAAC,iCAAiCA;IACjD,SAAU;QACR,8CAA8C;QAC9CN,QAAQC,GAAG,CAAC;QACZM,QAAQC,IAAI,CAAC,IAAI,oCAAoC;IACvD;AACF;AAEA,0CAA0C;AAC1CT"}