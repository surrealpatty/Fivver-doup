{"version":3,"sources":["../../../src/test/setup.ts"],"sourcesContent":["import dotenv from 'dotenv';\r\n\r\n// Load environment variables from .env file\r\ndotenv.config();  // Ensure the environment variables are loaded before any tests run\r\n\r\n// Mocking modules and models for testing\r\n\r\n// Mock User model methods\r\njest.mock('../models/user', () => ({\r\n  findOne: jest.fn(),\r\n  create: jest.fn(),\r\n  findByPk: jest.fn(),\r\n  update: jest.fn(),\r\n  destroy: jest.fn(),\r\n}));\r\n\r\n// Mock Order model methods\r\njest.mock('../models/order', () => ({\r\n  findByPk: jest.fn(),\r\n  create: jest.fn(),\r\n  findAll: jest.fn(),\r\n  destroy: jest.fn(),\r\n}));\r\n\r\n// Mock JWT methods\r\njest.mock('jsonwebtoken', () => ({\r\n  verify: jest.fn(),\r\n  sign: jest.fn(() => 'mockedToken'), // Return a constant mocked token\r\n}));\r\n\r\n// Mock Sequelize connection\r\njest.mock('../config/database', () => ({\r\n  sequelize: {\r\n    authenticate: jest.fn().mockResolvedValue(undefined), // Mock DB authentication\r\n    close: jest.fn().mockResolvedValue(undefined), // Mock DB connection close\r\n  },\r\n}));\r\n\r\n/**\r\n * Global setup for environment variables or mock configurations.\r\n */\r\nbeforeAll(() => {\r\n  // Set up mock environment variables\r\n  process.env.JWT_SECRET = 'mock-secret-key'; // Mock JWT secret key for testing\r\n  // Other environment variables can be set here if needed\r\n  console.log('Setting up before all tests...');\r\n});\r\n\r\n/**\r\n * Reset mocks to ensure no state leaks between tests.\r\n */\r\nafterEach(() => {\r\n  jest.clearAllMocks(); // Clears all mock calls and resets mock states after each test\r\n});\r\n\r\n/**\r\n * Clean-up tasks after all tests have run.\r\n */\r\nafterAll(async () => {\r\n  console.log('Cleaning up after all tests...');\r\n  await import('../config/database').then(async (module) => {\r\n    await module.sequelize.close(); // Close the mocked DB connection\r\n  });\r\n});\r\n\r\n// Ensure Jest global functions are available for all tests\r\nimport '@jest/globals'; // Import Jest globals to ensure they are available globally in tests\r\n\r\n"],"names":["dotenv","config","jest","mock","findOne","fn","create","findByPk","update","destroy","findAll","verify","sign","sequelize","authenticate","mockResolvedValue","undefined","close","beforeAll","process","env","JWT_SECRET","console","log","afterEach","clearAllMocks","afterAll","then","module"],"mappings":";;;;+DAAmB;QAkEZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAhEP,4CAA4C;AAC5CA,eAAM,CAACC,MAAM,IAAK,mEAAmE;AAErF,yCAAyC;AAEzC,0BAA0B;AAC1BC,KAAKC,IAAI,CAAC,kBAAkB,IAAO,CAAA;QACjCC,SAASF,KAAKG,EAAE;QAChBC,QAAQJ,KAAKG,EAAE;QACfE,UAAUL,KAAKG,EAAE;QACjBG,QAAQN,KAAKG,EAAE;QACfI,SAASP,KAAKG,EAAE;IAClB,CAAA;AAEA,2BAA2B;AAC3BH,KAAKC,IAAI,CAAC,mBAAmB,IAAO,CAAA;QAClCI,UAAUL,KAAKG,EAAE;QACjBC,QAAQJ,KAAKG,EAAE;QACfK,SAASR,KAAKG,EAAE;QAChBI,SAASP,KAAKG,EAAE;IAClB,CAAA;AAEA,mBAAmB;AACnBH,KAAKC,IAAI,CAAC,gBAAgB,IAAO,CAAA;QAC/BQ,QAAQT,KAAKG,EAAE;QACfO,MAAMV,KAAKG,EAAE,CAAC,IAAM;IACtB,CAAA;AAEA,4BAA4B;AAC5BH,KAAKC,IAAI,CAAC,sBAAsB,IAAO,CAAA;QACrCU,WAAW;YACTC,cAAcZ,KAAKG,EAAE,GAAGU,iBAAiB,CAACC;YAC1CC,OAAOf,KAAKG,EAAE,GAAGU,iBAAiB,CAACC;QACrC;IACF,CAAA;AAEA;;CAEC,GACDE,UAAU;IACR,oCAAoC;IACpCC,QAAQC,GAAG,CAACC,UAAU,GAAG,mBAAmB,kCAAkC;IAC9E,wDAAwD;IACxDC,QAAQC,GAAG,CAAC;AACd;AAEA;;CAEC,GACDC,UAAU;IACRtB,KAAKuB,aAAa,IAAI,+DAA+D;AACvF;AAEA;;CAEC,GACDC,SAAS;IACPJ,QAAQC,GAAG,CAAC;IACZ,MAAM,mEAAA,QAAO,wBAAsBI,IAAI,CAAC,OAAOC;QAC7C,MAAMA,OAAOf,SAAS,CAACI,KAAK,IAAI,iCAAiC;IACnE;AACF;CAGwB,qEAAqE"}