{"version":3,"sources":["../../../src/test/app.test.ts"],"sourcesContent":["import path from 'path';\r\nimport request from 'supertest';\r\nimport { Express } from 'express';\r\nimport { sequelize } from '../config/database'; // Sequelize instance for syncing\r\nimport { User } from '../models/user'; // Example of importing your models\r\n\r\n// Define the path to the compiled `index.js` file in `dist/`\r\nconst appPath = path.resolve(__dirname, '../../dist/index'); // Adjusted path\r\n\r\n// Initialize app variable with explicit typing as Express.Application\r\nlet app: Express | undefined;\r\n\r\nbeforeAll(async () => {\r\n  // First, ensure Sequelize sync is complete\r\n  await sequelize.sync();  // This will sync models with the database\r\n\r\n  try {\r\n    // Dynamically import the app from the compiled dist/index.js\r\n    const module = await import(appPath);\r\n    app = module.default || module.app; // Adjust based on how your app is exported\r\n  } catch (error) {\r\n    console.error('Error loading app from dist:', error);\r\n    throw error; // Ensure the tests fail if the app can't be loaded\r\n  }\r\n});\r\n\r\nafterAll(async () => {\r\n  // Close the database connection after tests have finished\r\n  await sequelize.close();\r\n});\r\n\r\ndescribe('Basic Test Suite', () => {\r\n  it('should respond with a message from the root endpoint', async () => {\r\n    if (!app) {\r\n      console.warn('Skipping tests as app could not be loaded');\r\n      return; // Skip the test if app could not be loaded\r\n    }\r\n\r\n    // Send a GET request to the root endpoint\r\n    const response = await request(app).get('/');\r\n\r\n    // Check the response\r\n    expect(response.statusCode).toBe(200);\r\n    expect(response.text).toBe('Welcome to Fiverr Clone!');\r\n  });\r\n\r\n  // Add more tests as needed\r\n});\r\n"],"names":["appPath","path","resolve","__dirname","app","beforeAll","sequelize","sync","module","default","error","console","afterAll","close","describe","it","warn","response","request","get","expect","statusCode","toBe","text"],"mappings":";;;;6DAAiB;kEACG;0BAEM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAG1B,6DAA6D;AAC7D,MAAMA,UAAUC,aAAI,CAACC,OAAO,CAACC,WAAW,qBAAqB,gBAAgB;AAE7E,sEAAsE;AACtE,IAAIC;AAEJC,UAAU;IACR,2CAA2C;IAC3C,MAAMC,mBAAS,CAACC,IAAI,IAAK,0CAA0C;IAEnE,IAAI;QACF,6DAA6D;QAC7D,MAAMC,SAAS,MAAM,gBAAOR,2DAAP;QACrBI,MAAMI,OAAOC,OAAO,IAAID,OAAOJ,GAAG,EAAE,2CAA2C;IACjF,EAAE,OAAOM,OAAO;QACdC,QAAQD,KAAK,CAAC,gCAAgCA;QAC9C,MAAMA,OAAO,mDAAmD;IAClE;AACF;AAEAE,SAAS;IACP,0DAA0D;IAC1D,MAAMN,mBAAS,CAACO,KAAK;AACvB;AAEAC,SAAS,oBAAoB;IAC3BC,GAAG,wDAAwD;QACzD,IAAI,CAACX,KAAK;YACRO,QAAQK,IAAI,CAAC;YACb,QAAQ,2CAA2C;QACrD;QAEA,0CAA0C;QAC1C,MAAMC,WAAW,MAAMC,IAAAA,kBAAO,EAACd,KAAKe,GAAG,CAAC;QAExC,qBAAqB;QACrBC,OAAOH,SAASI,UAAU,EAAEC,IAAI,CAAC;QACjCF,OAAOH,SAASM,IAAI,EAAED,IAAI,CAAC;IAC7B;AAEA,2BAA2B;AAC7B"}