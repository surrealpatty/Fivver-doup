{"version":3,"sources":["../../../src/test/user.test.ts"],"sourcesContent":["import { User } from '../models/user';  // Adjusted relative path to the User model\r\njest.mock('../models/user', () => ({\r\n  User: {\r\n    create: jest.fn(),\r\n  },\r\n}));\r\n\r\ndescribe('User Model', () => {\r\n  beforeEach(() => {\r\n    jest.clearAllMocks(); // Clear mocks before each test\r\n  });\r\n\r\n  it('should create a new user successfully', async () => {\r\n    // Arrange: Mock the User.create method if you want to mock it\r\n    const mockCreate = jest.fn().mockResolvedValueOnce({\r\n      id: '1',\r\n      email: 'test@example.com',\r\n      username: 'testuser',\r\n      password: 'password123',  // Mock the password in the response\r\n    });\r\n    \r\n    (User.create as jest.Mock) = mockCreate;  // Assign mock to the User.create method\r\n\r\n    // Act: Call the method you want to test\r\n    const user = await User.create({\r\n      email: 'test@example.com',\r\n      username: 'testuser',\r\n      password: 'password123',  // Add password here for testing\r\n    });\r\n\r\n    // Assert: Ensure that the method was called with the correct parameters\r\n    expect(mockCreate).toHaveBeenCalledWith({\r\n      email: 'test@example.com',\r\n      username: 'testuser',\r\n      password: 'password123',  // Ensure password is included\r\n    });\r\n    expect(user).toEqual({\r\n      id: '1',\r\n      email: 'test@example.com',\r\n      username: 'testuser',\r\n      password: 'password123',  // Ensure the password is mocked correctly\r\n    });\r\n  });\r\n});\r\n"],"names":["jest","mock","User","create","fn","describe","beforeEach","clearAllMocks","it","mockCreate","mockResolvedValueOnce","id","email","username","password","user","expect","toHaveBeenCalledWith","toEqual"],"mappings":";;;;sBAAqB;AACrBA,KAAKC,IAAI,CAAC,kBAAkB,IAAO,CAAA;QACjCC,MAAM;YACJC,QAAQH,KAAKI,EAAE;QACjB;IACF,CAAA;AAEAC,SAAS,cAAc;IACrBC,WAAW;QACTN,KAAKO,aAAa,IAAI,+BAA+B;IACvD;IAEAC,GAAG,yCAAyC;QAC1C,8DAA8D;QAC9D,MAAMC,aAAaT,KAAKI,EAAE,GAAGM,qBAAqB,CAAC;YACjDC,IAAI;YACJC,OAAO;YACPC,UAAU;YACVC,UAAU;QACZ;QAECZ,UAAI,CAACC,MAAM,GAAiBM,YAAa,wCAAwC;QAElF,wCAAwC;QACxC,MAAMM,OAAO,MAAMb,UAAI,CAACC,MAAM,CAAC;YAC7BS,OAAO;YACPC,UAAU;YACVC,UAAU;QACZ;QAEA,wEAAwE;QACxEE,OAAOP,YAAYQ,oBAAoB,CAAC;YACtCL,OAAO;YACPC,UAAU;YACVC,UAAU;QACZ;QACAE,OAAOD,MAAMG,OAAO,CAAC;YACnBP,IAAI;YACJC,OAAO;YACPC,UAAU;YACVC,UAAU;QACZ;IACF;AACF"}