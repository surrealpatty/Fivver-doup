{"version":3,"sources":["../../../src/test/testModels.ts"],"sourcesContent":["// src/test/testModels.ts\r\nimport { sequelize } from '../config/database'; // Import sequelize instance\r\nimport { User } from '../models/user'; // Use named import for User model\r\nimport Service, { ServiceCreationAttributes } from '../models/service';  // Import Service and ServiceCreationAttributes\r\n\r\n// Function to test user and service models\r\nconst testModels = async () => {\r\n  try {\r\n    // Synchronize models with the database\r\n    await sequelize.sync({ force: true });\r\n\r\n    console.log('Database synced successfully.');\r\n\r\n    // Create a test user\r\n    const testUser = await User.create({\r\n      username: 'testuser',\r\n      email: 'testuser@example.com',\r\n      password: 'password123',\r\n      role: 'free',\r\n    });\r\n\r\n    console.log('Test User created:', testUser.toJSON());\r\n\r\n    // Create a test service associated with the user\r\n    const testServiceData: ServiceCreationAttributes = {  // Now recognized\r\n      title: 'Test Service',\r\n      description: 'A description of the test service.',\r\n      price: 99.99,\r\n      userId: testUser.id, // Associate with the user\r\n    };\r\n\r\n    // Create the test service using the ServiceCreationAttributes type\r\n    const testService = await Service.create(testServiceData);\r\n    console.log('Test Service created:', testService.toJSON());\r\n  } catch (error) {\r\n    console.error('Error testing models:', error);\r\n  } finally {\r\n    // Close the database connection\r\n    await sequelize.close();\r\n  }\r\n};\r\n\r\n// Export the function using ES module syntax\r\nexport default testModels;\r\n\r\n// Call the function to test models\r\ntestModels();\r\n"],"names":["testModels","sequelize","sync","force","console","log","testUser","User","create","username","email","password","role","toJSON","testServiceData","title","description","price","userId","id","testService","Service","error","close"],"mappings":"AAAA,yBAAyB;;;;;+BA0CzB,6CAA6C;AAC7C;;;eAAA;;;0BA1C0B;sBACL;gEAC8B;;;;;;AAEnD,2CAA2C;AAC3C,MAAMA,aAAa;IACjB,IAAI;QACF,uCAAuC;QACvC,MAAMC,mBAAS,CAACC,IAAI,CAAC;YAAEC,OAAO;QAAK;QAEnCC,QAAQC,GAAG,CAAC;QAEZ,qBAAqB;QACrB,MAAMC,WAAW,MAAMC,UAAI,CAACC,MAAM,CAAC;YACjCC,UAAU;YACVC,OAAO;YACPC,UAAU;YACVC,MAAM;QACR;QAEAR,QAAQC,GAAG,CAAC,sBAAsBC,SAASO,MAAM;QAEjD,iDAAiD;QACjD,MAAMC,kBAA6C;YACjDC,OAAO;YACPC,aAAa;YACbC,OAAO;YACPC,QAAQZ,SAASa,EAAE;QACrB;QAEA,mEAAmE;QACnE,MAAMC,cAAc,MAAMC,gBAAO,CAACb,MAAM,CAACM;QACzCV,QAAQC,GAAG,CAAC,yBAAyBe,YAAYP,MAAM;IACzD,EAAE,OAAOS,OAAO;QACdlB,QAAQkB,KAAK,CAAC,yBAAyBA;IACzC,SAAU;QACR,gCAAgC;QAChC,MAAMrB,mBAAS,CAACsB,KAAK;IACvB;AACF;MAGA,WAAevB;AAEf,mCAAmC;AACnCA"}