{"version":3,"sources":["../../../src/test/userServiceTest.ts"],"sourcesContent":["// src/test/userServiceTest.ts\r\nimport Service, { ServiceCreationAttributes } from '../models/service';  // Import the interface and class\r\nimport { User } from '../models/user'; // Correct named import for User\r\nimport { sequelize } from '../config/database'; // Import the sequelize instance\r\n\r\ndescribe('Service Model Tests', () => {\r\n  beforeAll(async () => {\r\n    // Sync the database (ensure it's ready before tests)\r\n    await sequelize.sync({ force: true });\r\n  });\r\n\r\n  it('should create a new service', async () => {\r\n    // Create a user with all required fields (password and role)\r\n    const user = await User.create({\r\n      username: 'testUser',\r\n      email: 'test@example.com',\r\n      password: 'testPassword123',\r\n      role: 'free', // Ensure role is provided\r\n    });\r\n\r\n    // Prepare the service data with the correct type\r\n    const serviceData: ServiceCreationAttributes = {\r\n      userId: user.id,\r\n      title: 'Test Service',\r\n      description: 'A test service description',\r\n      price: 100.0,\r\n    };\r\n\r\n    // Create the service and ensure it's properly typed\r\n    const service = await Service.create(serviceData);\r\n\r\n    // Check that the service has the correct properties\r\n    expect(service.userId).toBe(user.id);\r\n    expect(service.title).toBe('Test Service');\r\n    expect(service.price).toBe(100.0);\r\n  });\r\n});\r\n"],"names":["describe","beforeAll","sequelize","sync","force","it","user","User","create","username","email","password","role","serviceData","userId","id","title","description","price","service","Service","expect","toBe"],"mappings":"AAAA,8BAA8B;;;;;gEACqB;sBAC9B;0BACK;;;;;;AAE1BA,SAAS,uBAAuB;IAC9BC,UAAU;QACR,qDAAqD;QACrD,MAAMC,mBAAS,CAACC,IAAI,CAAC;YAAEC,OAAO;QAAK;IACrC;IAEAC,GAAG,+BAA+B;QAChC,6DAA6D;QAC7D,MAAMC,OAAO,MAAMC,UAAI,CAACC,MAAM,CAAC;YAC7BC,UAAU;YACVC,OAAO;YACPC,UAAU;YACVC,MAAM;QACR;QAEA,iDAAiD;QACjD,MAAMC,cAAyC;YAC7CC,QAAQR,KAAKS,EAAE;YACfC,OAAO;YACPC,aAAa;YACbC,OAAO;QACT;QAEA,oDAAoD;QACpD,MAAMC,UAAU,MAAMC,gBAAO,CAACZ,MAAM,CAACK;QAErC,oDAAoD;QACpDQ,OAAOF,QAAQL,MAAM,EAAEQ,IAAI,CAAChB,KAAKS,EAAE;QACnCM,OAAOF,QAAQH,KAAK,EAAEM,IAAI,CAAC;QAC3BD,OAAOF,QAAQD,KAAK,EAAEI,IAAI,CAAC;IAC7B;AACF"}